// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Kmd.Logic.ConsentService.ConsoleSample.Client.Models
{
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    public partial class ConsentGroup
    {
        /// <summary>
        /// Initializes a new instance of the ConsentGroup class.
        /// </summary>
        public ConsentGroup()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the ConsentGroup class.
        /// </summary>
        public ConsentGroup(System.Guid? id = default(System.Guid?), System.Guid? subscriptionId = default(System.Guid?), string name = default(string), string keyFormat = default(string), IList<string> scopes = default(IList<string>), IList<ConsentGroupMember> members = default(IList<ConsentGroupMember>))
        {
            Id = id;
            SubscriptionId = subscriptionId;
            Name = name;
            KeyFormat = keyFormat;
            Scopes = scopes;
            Members = members;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "id")]
        public System.Guid? Id { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "subscriptionId")]
        public System.Guid? SubscriptionId { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "name")]
        public string Name { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "keyFormat")]
        public string KeyFormat { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "scopes")]
        public IList<string> Scopes { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "members")]
        public IList<ConsentGroupMember> Members { get; set; }

    }
}
